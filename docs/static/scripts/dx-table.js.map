{
  "version": 3,
  "sources": ["../../../src/components/dx-table.ts"],
  "sourcesContent": ["class DomxTable extends HTMLElement {\n  baseStyles: string[][] = [\n    [\"display\", \"table\"],\n    [\"width\", \"100%\"],\n  ];\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  html: string = \"<table><slot></slot></table>\";\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.render = this.render.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    this.shadowRoot!.innerHTML = this.html;\n    this.render();\n    window.addEventListener(\"resize\", this.render);\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\"resize\", this.render);\n  }\n  render() {\n    let styles = this.baseStyles;\n    let psuedoStyles: Record<string, [string, string][]> = {};\n    this.getAttributeNames().forEach((attributeName) => {\n      const [style, bp] = attributeName.split(\"--\");\n      const [attr, psuedo] = style.split(\":\");\n      const breakpoint = Number(bp ?? 0);\n      if (window.innerWidth < breakpoint) return;\n      const value = (this as any).getAttribute(attributeName);\n      if (psuedo) {\n        if (!psuedoStyles[psuedo]) psuedoStyles[psuedo] = [];\n        psuedoStyles[psuedo].push([attr, value]);\n      } else {\n        styles.push([attr, value]);\n      }\n    });\n\n    // generate host styles\n    const hostStyles = `:host{ ${styles\n      .map(([attr, value]) => `${attr}:${value};`)\n      .join(\"\")}}`;\n\n    // generate host psuedo styles\n    const hostPsuedoStyles = Object.entries(psuedoStyles)\n      .map(([psuedo, styles]) => {\n        const _styles = styles\n          .map(([attr, value]) => `${attr}:${value};`)\n          .join(\"\");\n        return `:host(:${psuedo}) { ${_styles} }`;\n      })\n      .join(\"\");\n\n    this.styleSheet.replace(hostStyles + hostPsuedoStyles);\n  }\n}\n\ncustomElements.define(\"dx-table\", DomxTable);\n\ncustomElements.define(\n  \"dx-tr\",\n  class DomxTr extends DomxTable {\n    baseStyles: string[][] = [\n      [\"display\", \"table-row\"],\n      [\"width\", \"100%\"],\n    ];\n    html: string = \"<tr><slot></slot></tr>\";\n  }\n);\n\ncustomElements.define(\n  \"dx-th\",\n  class DomxTh extends DomxTable {\n    baseStyles: string[][] = [\n      [\"background-color\", \"dimgray\"],\n      [\"display\", \"table-cell\"],\n      [\"padding\", \"10px\"],\n    ];\n    html: string = \"<th><slot></slot></th>\";\n  }\n);\n\ncustomElements.define(\n  \"dx-td\",\n  class DomxTd extends DomxTable {\n    baseStyles: string[][] = [\n      [\"border-bottom\", \"1px solid dimgray\"],\n      [\"display\", \"table-cell\"],\n      [\"padding\", \"10px\"],\n      [\"text-align\", \"left\"],\n      [\"vertical-align\", \"top\"],\n    ];\n    html: string = `<td><slot></slot></td>`;\n  }\n);\n"],
  "mappings": "mBAAA,IAAMA,EAAN,cAAwB,WAAY,CAQlC,aAAc,CACZ,MAAM,EARR,gBAAyB,CACvB,CAAC,UAAW,OAAO,EACnB,CAAC,QAAS,MAAM,CAClB,EACA,kBAAmD,CAAC,EACpD,gBAA4B,IAAI,cAChC,UAAe,+BAGb,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAClC,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,WAAY,mBAAqB,CAAC,KAAK,UAAU,EACrC,IAAI,iBAAkBC,GAAc,CACnDA,EAAU,QAASC,GAAa,CAC1BA,EAAS,OAAS,cAAc,KAAK,OAAO,CAClD,CAAC,CACH,CAAC,EACQ,QAAQ,KAAM,CAAE,WAAY,EAAK,CAAC,CAC7C,CACA,mBAAoB,CAClB,KAAK,WAAY,UAAY,KAAK,KAClC,KAAK,OAAO,EACZ,OAAO,iBAAiB,SAAU,KAAK,MAAM,CAC/C,CACA,sBAAuB,CACrB,OAAO,oBAAoB,SAAU,KAAK,MAAM,CAClD,CACA,QAAS,CACP,IAAIC,EAAS,KAAK,WACdC,EAAmD,CAAC,EACxD,KAAK,kBAAkB,EAAE,QAASC,GAAkB,CAClD,GAAM,CAACC,EAAOC,CAAE,EAAIF,EAAc,MAAM,IAAI,EACtC,CAACG,EAAMC,CAAM,EAAIH,EAAM,MAAM,GAAG,EAChCI,EAAa,OAAOH,GAAM,CAAC,EACjC,GAAI,OAAO,WAAaG,EAAY,OACpC,IAAMC,EAAS,KAAa,aAAaN,CAAa,EAClDI,GACGL,EAAaK,KAASL,EAAaK,GAAU,CAAC,GACnDL,EAAaK,GAAQ,KAAK,CAACD,EAAMG,CAAK,CAAC,GAEvCR,EAAO,KAAK,CAACK,EAAMG,CAAK,CAAC,CAE7B,CAAC,EAGD,IAAMC,EAAa,UAAUT,EAC1B,IAAI,CAAC,CAACK,EAAMG,CAAK,IAAM,GAAGH,KAAQG,IAAQ,EAC1C,KAAK,EAAE,KAGJE,EAAmB,OAAO,QAAQT,CAAY,EACjD,IAAI,CAAC,CAACK,EAAQN,CAAM,IAAM,CACzB,IAAMW,EAAUX,EACb,IAAI,CAAC,CAACK,EAAMG,CAAK,IAAM,GAAGH,KAAQG,IAAQ,EAC1C,KAAK,EAAE,EACV,MAAO,UAAUF,QAAaK,KAChC,CAAC,EACA,KAAK,EAAE,EAEV,KAAK,WAAW,QAAQF,EAAaC,CAAgB,CACvD,CACF,EAEA,eAAe,OAAO,WAAYb,CAAS,EAE3C,eAAe,OACb,QACA,cAAqBA,CAAU,CAA/B,kCACE,gBAAyB,CACvB,CAAC,UAAW,WAAW,EACvB,CAAC,QAAS,MAAM,CAClB,EACA,UAAe,yBACjB,CACF,EAEA,eAAe,OACb,QACA,cAAqBA,CAAU,CAA/B,kCACE,gBAAyB,CACvB,CAAC,mBAAoB,SAAS,EAC9B,CAAC,UAAW,YAAY,EACxB,CAAC,UAAW,MAAM,CACpB,EACA,UAAe,yBACjB,CACF,EAEA,eAAe,OACb,QACA,cAAqBA,CAAU,CAA/B,kCACE,gBAAyB,CACvB,CAAC,gBAAiB,mBAAmB,EACrC,CAAC,UAAW,YAAY,EACxB,CAAC,UAAW,MAAM,EAClB,CAAC,aAAc,MAAM,EACrB,CAAC,iBAAkB,KAAK,CAC1B,EACA,UAAe,yBACjB,CACF",
  "names": ["DomxTable", "mutations", "mutation", "styles", "psuedoStyles", "attributeName", "style", "bp", "attr", "psuedo", "breakpoint", "value", "hostStyles", "hostPsuedoStyles", "_styles"]
}
