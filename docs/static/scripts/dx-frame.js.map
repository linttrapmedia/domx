{
  "version": 3,
  "sources": ["../../../src/components/dx-frame.ts"],
  "sourcesContent": ["export class DomxFrame extends HTMLElement {\n  behaviorAttributeNames: string[] = [\"src\", \"allowfullscreen\", \"allow\"];\n  baseStyles: string = `:host { box-sizing: border-box; display: flex; }`;\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n  }\n  connectedCallback() {\n    this.render();\n  }\n  renderCss(attributes: string[] = []) {\n    let styles: [bp: string, prop: string, val: string, psuedo: string][] = [];\n    for (let i = 0; i < attributes.length; i++) {\n      const attributeName = attributes[i];\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [prop, bp = \"0\"] = attr.split(\"--\");\n      const value = (this as any).getAttribute(attributeName);\n      styles.push([bp, prop, value, psuedo]);\n    }\n    const renderedStyles = styles\n      .sort((a, b) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(\n        ([bp, prop, val, psuedo]) =>\n          `@media (min-width: ${bp}px) { :host ${\n            psuedo ? `iframe:${psuedo}` : \"iframe\"\n          } { ${prop}:${val}; }}`\n      )\n      .join(\"\\n\");\n    return this.baseStyles + renderedStyles;\n  }\n  render() {\n    this.innerHTML = \"\";\n    const iframe = document.createElement(\"iframe\");\n    iframe.src = this.getAttribute(\"src\") as string;\n    iframe.width = \"100%\";\n    iframe.height = \"100%\";\n    iframe.frameBorder = \"0\";\n    iframe.allowFullscreen = this.hasAttribute(\"allowfullscreen\");\n    iframe.allow = this.getAttribute(\"allow\") || \"\";\n    this.shadowRoot!.appendChild(iframe);\n    const styleAttributes = this.getAttributeNames().filter(\n      (attr) => !this.behaviorAttributeNames.includes(attr)\n    );\n    this.styleSheet.replace(this.renderCss(styleAttributes));\n  }\n}\n\ncustomElements.define(\"dx-frame\", DomxFrame);\n"],
  "mappings": ";;;AAAO,MAAM,YAAN,cAAwB,YAAY;AAAA,IAKzC,cAAc;AACZ,YAAM;AALR,oCAAmC,CAAC,OAAO,mBAAmB,OAAO;AACrE,wBAAqB;AACrB,0BAAmD,CAAC;AACpD,wBAA4B,IAAI,cAAc;AAG5C,WAAK,aAAa,EAAE,MAAM,OAAO,CAAC;AAClC,WAAK,WAAY,YAAY;AAC7B,WAAK,SAAS,KAAK,OAAO,KAAK,IAAI;AACnC,WAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AACzC,WAAK,WAAY,qBAAqB,CAAC,KAAK,UAAU;AAAA,IACxD;AAAA,IACA,oBAAoB;AAClB,WAAK,OAAO;AAAA,IACd;AAAA,IACA,UAAU,aAAuB,CAAC,GAAG;AACnC,UAAI,SAAoE,CAAC;AACzE,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,cAAM,gBAAgB,WAAW;AACjC,cAAM,CAAC,MAAM,MAAM,IAAI,cAAc,MAAM,GAAG;AAC9C,cAAM,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,MAAM,IAAI;AACxC,cAAM,QAAS,KAAa,aAAa,aAAa;AACtD,eAAO,KAAK,CAAC,IAAI,MAAM,OAAO,MAAM,CAAC;AAAA,MACvC;AACA,YAAM,iBAAiB,OACpB,KAAK,CAAC,GAAG,MAAO,EAAE,KAAK,IAAI,EAAG,EAC9B,KAAK,CAAC,GAAG,MAAM,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC,EAC1C;AAAA,QACC,CAAC,CAAC,IAAI,MAAM,KAAK,MAAM,MACrB,sBAAsB,iBACpB,SAAS,UAAU,WAAW,cAC1B,QAAQ;AAAA,MAClB,EACC,KAAK,IAAI;AACZ,aAAO,KAAK,aAAa;AAAA,IAC3B;AAAA,IACA,SAAS;AACP,WAAK,YAAY;AACjB,YAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,MAAM,KAAK,aAAa,KAAK;AACpC,aAAO,QAAQ;AACf,aAAO,SAAS;AAChB,aAAO,cAAc;AACrB,aAAO,kBAAkB,KAAK,aAAa,iBAAiB;AAC5D,aAAO,QAAQ,KAAK,aAAa,OAAO,KAAK;AAC7C,WAAK,WAAY,YAAY,MAAM;AACnC,YAAM,kBAAkB,KAAK,kBAAkB,EAAE;AAAA,QAC/C,CAAC,SAAS,CAAC,KAAK,uBAAuB,SAAS,IAAI;AAAA,MACtD;AACA,WAAK,WAAW,QAAQ,KAAK,UAAU,eAAe,CAAC;AAAA,IACzD;AAAA,EACF;AAEA,iBAAe,OAAO,YAAY,SAAS;",
  "names": []
}
