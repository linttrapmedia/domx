{
  "version": 3,
  "sources": ["../../../src/helpers.ts", "../../../src/components/dx-theme.ts"],
  "sourcesContent": ["export function cssObjectToString(css: any): string {\n  let str = \"\";\n  for (let key in css) {\n    str += `${key}: ${css[key]};`;\n  }\n  return str;\n}\n\nexport function mergeByIndex(arr1: any[], arr2: any[]): any[] {\n  let merged: any[] = [...arr1];\n  for (let i = 0; i < arr2.length; i++) {\n    if (i < merged.length) {\n      merged[i] = arr2[i];\n    } else {\n      merged.push(arr2[i]);\n    }\n  }\n  return merged;\n}\n\nexport function attachShadow(el: HTMLElement, init: ShadowRootInit) {\n  el.attachShadow(init);\n}\n\nexport function attachStyles(el: HTMLElement, styles: string) {\n  let sheet = new CSSStyleSheet();\n  sheet.replace(styles);\n  el.shadowRoot!.adoptedStyleSheets = [sheet];\n  return sheet;\n}\n\nexport function attachTemplate(el: HTMLElement, template: string) {\n  const templateEl = document.createElement(\"template\");\n  templateEl.innerHTML = template;\n  const node = templateEl.content.cloneNode(true);\n  el.shadowRoot!.appendChild(node);\n  return node;\n}\n", "import { attachShadow, attachStyles, attachTemplate } from \"../helpers\";\n\nconst lite = `\n--dx-theme-primary-color: goldenrod;\n--dx-theme-secondary-color: #6efa8e;\n--dx-theme-tertiary-color: #fa6a6a;\n--dx-theme-info-color: #6afafa;\n--dx-theme-success-color: #6efa8e;\n--dx-theme-warning-color: #faf46a;\n--dx-theme-danger-color: #fa6a6a;\n--dx-theme-text-color: #333333;\n--dx-theme-bg-color: #ffffff;\n--dx-theme-color-black: #333333;\n--dx-theme-color-white: #ffffff;\n`;\n\nconst dark = `\n--dx-theme-primary-color: goldenrod;\n--dx-theme-secondary-color: #3dda4e;\n--dx-theme-tertiary-color: #da3a3a;\n--dx-theme-info-color: #3adada;\n--dx-theme-success-color: #3dda4e;\n--dx-theme-warning-color: #dad53a;\n--dx-theme-danger-color: #da3a3a;\n--dx-theme-text-color: #ffffff;\n--dx-theme-bg-color: #111111;\n--dx-theme-color-black: #ffffff;\n--dx-theme-color-white: #333333;\n`;\n\nconst elegant = `\n--dx-theme-font-primary: \"Playfair Display\", Georgia, serif; \n--dx-theme-font-secondary: \"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; \n--dx-theme-font-tertiary: \"Roboto Slab\", Times, serif; \n--dx-theme-font-size-small: 14px; \n--dx-theme-font-size-medium: 18px; \n--dx-theme-font-size-large: 24px; \n--dx-theme-font-size-xlarge: 30px; \n`;\n\nconst modern = `\n--dx-theme-font-primary: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; \n--dx-theme-font-secondary: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; \n--dx-theme-font-tertiary: \"Montserrat\", \"Helvetica Neue\", Helvetica, Arial, sans-serif; \n--dx-theme-font-size-small: 12px; \n--dx-theme-font-size-medium: 16px; \n--dx-theme-font-size-large: 20px; \n--dx-theme-font-size-xlarge: 26px; \n`;\n\nclass DomTheme extends HTMLElement {\n  colorScheme: \"dark\" | \"lite\" = \"lite\";\n  fontScheme: \"elegant\" | \"modern\" = \"elegant\";\n  styleSheet: CSSStyleSheet;\n  constructor() {\n    super();\n    attachShadow(this, { mode: \"open\" });\n    attachTemplate(this, `<slot></slot>`);\n    this.render = this.render.bind(this);\n    this.setupStyleSheet();\n  }\n  attributeChangedCallback() {\n    this.colorScheme = this.hasAttribute(\"dark\") ? \"dark\" : \"lite\";\n    this.fontScheme = this.hasAttribute(\"app\") ? \"modern\" : \"elegant\";\n    this.render();\n  }\n  connectedCallback() {\n    this.colorScheme = this.hasAttribute(\"dark\") ? \"dark\" : \"lite\";\n    this.fontScheme = this.hasAttribute(\"modern\") ? \"modern\" : \"elegant\";\n    this.render();\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\"resize\", this.render);\n  }\n  render() {\n    const colors = this.colorScheme === \"dark\" ? dark : lite;\n    const fonts = this.fontScheme === \"modern\" ? modern : elegant;\n\n    this.styleSheet.replace(`:host { \n      ${colors} \n      ${fonts} \n      display:block;\n      background-color: var(--dx-theme-bg-color);\n      height: 100%;\n      width: 100%;}`);\n  }\n  setupStyleSheet() {\n    this.styleSheet = attachStyles(this, `:host { }`);\n  }\n  static get observedAttributes() {\n    return [\"dark\", \"lite\", \"app\", \"blog\"];\n  }\n}\n\ncustomElements.define(\"dx-theme\", DomTheme);\n"],
  "mappings": "mBAoBO,SAASA,EAAaC,EAAiBC,EAAsB,CAClED,EAAG,aAAaC,CAAI,CACtB,CAEO,SAASC,EAAaF,EAAiBG,EAAgB,CAC5D,IAAIC,EAAQ,IAAI,cAChB,OAAAA,EAAM,QAAQD,CAAM,EACpBH,EAAG,WAAY,mBAAqB,CAACI,CAAK,EACnCA,CACT,CAEO,SAASC,EAAeL,EAAiBM,EAAkB,CAChE,IAAMC,EAAa,SAAS,cAAc,UAAU,EACpDA,EAAW,UAAYD,EACvB,IAAME,EAAOD,EAAW,QAAQ,UAAU,EAAI,EAC9C,OAAAP,EAAG,WAAY,YAAYQ,CAAI,EACxBA,CACT,CCnCA,IAAMC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcPC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcPC,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUVC,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUTC,EAAN,cAAuB,WAAY,CAIjC,aAAc,CACZ,MAAM,EAJR,iBAA+B,OAC/B,gBAAmC,UAIjCC,EAAa,KAAM,CAAE,KAAM,MAAO,CAAC,EACnCC,EAAe,KAAM,eAAe,EACpC,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,gBAAgB,CACvB,CACA,0BAA2B,CACzB,KAAK,YAAc,KAAK,aAAa,MAAM,EAAI,OAAS,OACxD,KAAK,WAAa,KAAK,aAAa,KAAK,EAAI,SAAW,UACxD,KAAK,OAAO,CACd,CACA,mBAAoB,CAClB,KAAK,YAAc,KAAK,aAAa,MAAM,EAAI,OAAS,OACxD,KAAK,WAAa,KAAK,aAAa,QAAQ,EAAI,SAAW,UAC3D,KAAK,OAAO,CACd,CACA,sBAAuB,CACrB,OAAO,oBAAoB,SAAU,KAAK,MAAM,CAClD,CACA,QAAS,CACP,IAAMC,EAAS,KAAK,cAAgB,OAASN,EAAOD,EAC9CQ,EAAQ,KAAK,aAAe,SAAWL,EAASD,EAEtD,KAAK,WAAW,QAAQ;AAAA,QACpBK;AAAA,QACAC;AAAA;AAAA;AAAA;AAAA,oBAIY,CAClB,CACA,iBAAkB,CAChB,KAAK,WAAaC,EAAa,KAAM,WAAW,CAClD,CACA,WAAW,oBAAqB,CAC9B,MAAO,CAAC,OAAQ,OAAQ,MAAO,MAAM,CACvC,CACF,EAEA,eAAe,OAAO,WAAYL,CAAQ",
  "names": ["attachShadow", "el", "init", "attachStyles", "styles", "sheet", "attachTemplate", "template", "templateEl", "node", "lite", "dark", "elegant", "modern", "DomTheme", "attachShadow", "attachTemplate", "colors", "fonts", "attachStyles"]
}
