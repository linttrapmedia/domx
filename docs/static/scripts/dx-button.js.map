{
  "version": 3,
  "sources": ["../../../src/components/dx-base.ts", "../../../src/components/dx-button.ts"],
  "sourcesContent": ["export type DxStyle = [bp: string, prop: string, val: string, psuedo?: string, subSelector?: string];\n\nexport class DomxBase extends HTMLElement {\n  baseStyles: DxStyle[] = [];\n  props: string[] = [];\n  rendered: boolean = false;\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.getStylesFromEl = this.getStylesFromEl.bind(this);\n  }\n  connectedCallback() {\n    this.render();\n    this.dispatchEvent(new CustomEvent(\"rendered\"));\n    this.rendered = true;\n  }\n  renderCss(styles: DxStyle[]) {\n    const renderedStyles = styles\n      .sort((a) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(([bp = \"0\", prop, val, psuedo, sub = \"\"]) => {\n        const subSelector = `${sub !== \"\" ? `::slotted(${sub})` : \"\"}`;\n        return `@media (min-width: ${bp}px) { :host${\n          psuedo ? `(:${psuedo}) ${subSelector}` : subSelector\n        } { ${prop}:${val}; }}`;\n      })\n      .join(\"\\n\");\n    return renderedStyles;\n  }\n  getStylesFromEl(el: HTMLElement, subSelector?: string): DxStyle[] {\n    return el\n      .getAttributeNames()\n      .filter((attr) => !this.props.includes(attr) && !attr.includes(\"onclick:\"))\n      .map((attributeName) => {\n        const [attr, psuedo] = attributeName.split(\":\");\n        const [prop, bp] = attr.split(\"--\");\n        const value = el.getAttribute(attributeName) ?? \"\";\n        return [bp, prop, value, psuedo, subSelector];\n      });\n  }\n  async render() {}\n}\n", "import { DomxBase, DxStyle } from \"./dx-base\";\n\nexport class DomxButton extends DomxBase {\n  baseStyles: DxStyle[] = [\n    [\"0\", \"display\", \"inline-flex\"],\n    [\"0\", \"align-items\", \"center\"],\n    [\"0\", \"cursor\", \"pointer\"],\n    [\"0\", \"justify-content\", \"center\"],\n    [\"0\", \"width\", \"max-content\"],\n  ];\n  props: string[] = [\"id\", \"oclick\"];\n  constructor() {\n    super();\n    this.registerEvents = this.registerEvents.bind(this);\n  }\n  registerEvents() {\n    const DxStateOnClicks = this.getAttributeNames().filter((attr) => attr.startsWith(\"onclick:\"));\n    DxStateOnClicks.forEach((attr) => {\n      const value = this.getAttribute(attr) ?? \"\";\n      this.addEventListener(\"click\", () => {\n        const [_, state] = attr.split(\":\");\n        const transformation = value.split(\",\");\n        const stateEl = document.querySelector(`dx-state[name=${state}]`) as any;\n        const [trait] = transformation;\n        stateEl.transform(trait, transformation);\n      });\n    });\n  }\n  async render() {\n    if (this.rendered) return;\n    this.registerEvents();\n    const baseStyles = this.renderCss(this.baseStyles);\n    const buttonStyles = this.renderCss(this.getStylesFromEl(this));\n    const buttonLabel = this.querySelector(\"dx-button-label\") as DomxButtonLabel;\n    let buttonLabelStyles = \"\";\n    if (buttonLabel) {\n      await customElements.whenDefined(\"dx-button-label\");\n      const buttonLabelStyleList = [...this.getStylesFromEl(buttonLabel)];\n      buttonLabelStyles = this.renderCss(buttonLabelStyleList);\n    }\n    this.styleSheet.replace(baseStyles + buttonStyles + buttonLabelStyles);\n  }\n}\n\ncustomElements.define(\"dx-button\", DomxButton);\n\nexport class DomxButtonLabel extends DomxBase {\n  constructor() {\n    super();\n  }\n}\ncustomElements.define(\"dx-button-label\", DomxButtonLabel);\n"],
  "mappings": "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",
  "names": []
}
