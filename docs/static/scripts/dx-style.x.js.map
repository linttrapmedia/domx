{
  "version": 3,
  "sources": ["../../../src/components/dx-style.x.ts"],
  "sourcesContent": ["class DomxStyleX extends HTMLElement {\n  private styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  static create() {\n    document.createElement(\"dx-style-colors\") as DomxStyle;\n  }\n  static read(id: string) {\n    return DomxStyle.instances.find((el) => el.id === id);\n  }\n  static update(id: string, props: any) {\n    for (const key in props) DomxStyle.read(id)!.setAttribute(key, props[key]);\n  }\n  static delete(el: DomxStyle) {\n    el.remove();\n  }\n  static list(filter: string | undefined = undefined) {\n    if (!filter) return DomxStyle.instances;\n    return DomxStyle.instances.filter((el) => el.matches(filter));\n  }\n  static instances: DomxStyle[] = [];\n  constructor() {\n    super();\n    this.render = this.render.bind(this);\n    this.reduceAttrs = this.reduceAttrs.bind(this);\n    this.generateSelector = this.generateSelector.bind(this);\n  }\n  connectedCallback() {\n    if (this.hasChildNodes()) {\n      this.attachShadow({ mode: \"open\" });\n      this.shadowRoot!.innerHTML = \"<slot></slot>\";\n      this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    } else {\n      document.adoptedStyleSheets = [this.styleSheet];\n    }\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n    DomxStyle.instances.push(this);\n    this.render();\n  }\n  generateSelector(arrays: string[][]) {\n    const combinations: string[] = [];\n\n    // Function to recursively generate combinations\n    function recurse(prefix: string, index: number) {\n      if (index < arrays.length) {\n        for (const item of arrays[index]) {\n          const newPrefix = prefix ? `${prefix}\\\\:${item}` : item;\n          combinations.push(newPrefix);\n          recurse(newPrefix, index + 1);\n        }\n      }\n    }\n\n    // Generate combinations for each array\n    for (let i = 0; i < arrays.length; i++) {\n      recurse(\"\", i);\n    }\n\n    return combinations;\n  }\n  reduceAttrs(prefix: string) {\n    const attrs = this.getAttributeNames().filter((attr) => attr.startsWith(prefix));\n    return attrs.reduce((acc, attr) => {\n      const mod = attr.replace(prefix, \"\");\n      acc[mod] = this.getAttribute(attr);\n      return acc;\n    }, {} as any);\n  }\n  render() {\n    let styles = ``;\n    const wrapSelector = (sel: string) => (this.hasChildNodes() ? `::slotted(${sel})` : sel);\n    const colorAttrs = this.reduceAttrs(\"color-\");\n    const breakpointAttrs = this.reduceAttrs(\"breakpoint-\");\n    const psuedoAttrs = this.reduceAttrs(\"psuedo-\");\n    const modifiers = this.generateSelector([Object.keys(breakpointAttrs), Object.keys(psuedoAttrs)]);\n\n    // colors\n    for (const colorAttr in colorAttrs) {\n      const colorVal = colorAttrs[colorAttr];\n      const colorVar = `dx-style-color-${colorAttr}`;\n      styles += `${this.hasChildNodes() ? \":host\" : \":root\"} { --${colorVar}:${colorVal}; }\\n`; // needed for local scope\n      styles += `${wrapSelector(`.txt-${colorAttr}`)} { color: var(--${colorVar}); }\\n`;\n      styles += `${wrapSelector(`.hover\\\\:txt-${colorAttr}:hover`)}  { color: var(--${colorVar}); }\\n`;\n      styles += `${wrapSelector(`.bg-${colorAttr}`)}  { background-color: var(--${colorVar}); }\\n`;\n      styles += `${wrapSelector(`.hover\\\\:bg-${colorAttr}:hover`)}  { background-color: var(--${colorVar}); }\\n`;\n    }\n\n    // padding\n\n    // replace styles\n    console.log(styles);\n    this.styleSheet.replaceSync(styles);\n  }\n}\n\ncustomElements.define(\"dx-style\", DomxStyle);\n\nconst win = window as any;\nif (!win.DX) win.DX = {};\nif (!win.DX.style) win.DX.style = {};\nwin.DX.style = DomxStyle;\n"],
  "mappings": "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",
  "names": []
}
