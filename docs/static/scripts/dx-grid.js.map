{
  "version": 3,
  "sources": ["../../../src/components/dx-grid.ts"],
  "sourcesContent": ["export class DomxGrid extends HTMLElement {\n  baseStyles: string = `:host { box-sizing: border-box; display: grid; }`;\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    this.render();\n  }\n  renderCss() {\n    let styles: [bp: string, prop: string, val: string, psuedo: string][] = [\n      [\"0\", \"box-sizing\", \"border-box\", \"\"],\n    ];\n    const attributes = this.getAttributeNames();\n    for (let i = 0; i < attributes.length; i++) {\n      const attributeName = attributes[i];\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [prop, bp = \"0\"] = attr.split(\"--\");\n      const value = (this as any).getAttribute(attributeName);\n      styles.push([bp, prop, value, psuedo]);\n    }\n    const renderedStyles = styles\n      .sort((a, b) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(\n        ([bp, prop, val, psuedo]) =>\n          `@media (min-width: ${bp}px) { :host${\n            psuedo ? `:${psuedo}` : \"\"\n          } { ${prop}:${val}; }}`\n      )\n      .join(\"\\n\");\n    return this.baseStyles + renderedStyles;\n  }\n  render() {\n    this.styleSheet.replace(this.renderCss());\n  }\n}\n\ncustomElements.define(\"dx-grid\", DomxGrid);\n"],
  "mappings": ";;;AAAO,MAAM,WAAN,cAAuB,YAAY;AAAA,IAIxC,cAAc;AACZ,YAAM;AAJR,wBAAqB;AACrB,0BAAmD,CAAC;AACpD,wBAA4B,IAAI,cAAc;AAG5C,WAAK,aAAa,EAAE,MAAM,OAAO,CAAC;AAClC,WAAK,WAAY,YAAY;AAC7B,WAAK,SAAS,KAAK,OAAO,KAAK,IAAI;AACnC,WAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AACzC,WAAK,WAAY,qBAAqB,CAAC,KAAK,UAAU;AACtD,YAAM,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACnD,kBAAU,QAAQ,CAAC,aAAa;AAC9B,cAAI,SAAS,SAAS;AAAc,iBAAK,OAAO;AAAA,QAClD,CAAC;AAAA,MACH,CAAC;AACD,eAAS,QAAQ,MAAM,EAAE,YAAY,KAAK,CAAC;AAAA,IAC7C;AAAA,IACA,oBAAoB;AAClB,WAAK,OAAO;AAAA,IACd;AAAA,IACA,YAAY;AACV,UAAI,SAAoE;AAAA,QACtE,CAAC,KAAK,cAAc,cAAc,EAAE;AAAA,MACtC;AACA,YAAM,aAAa,KAAK,kBAAkB;AAC1C,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,cAAM,gBAAgB,WAAW;AACjC,cAAM,CAAC,MAAM,MAAM,IAAI,cAAc,MAAM,GAAG;AAC9C,cAAM,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,MAAM,IAAI;AACxC,cAAM,QAAS,KAAa,aAAa,aAAa;AACtD,eAAO,KAAK,CAAC,IAAI,MAAM,OAAO,MAAM,CAAC;AAAA,MACvC;AACA,YAAM,iBAAiB,OACpB,KAAK,CAAC,GAAG,MAAO,EAAE,KAAK,IAAI,EAAG,EAC9B,KAAK,CAAC,GAAG,MAAM,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC,EAC1C;AAAA,QACC,CAAC,CAAC,IAAI,MAAM,KAAK,MAAM,MACrB,sBAAsB,gBACpB,SAAS,IAAI,WAAW,QACpB,QAAQ;AAAA,MAClB,EACC,KAAK,IAAI;AACZ,aAAO,KAAK,aAAa;AAAA,IAC3B;AAAA,IACA,SAAS;AACP,WAAK,WAAW,QAAQ,KAAK,UAAU,CAAC;AAAA,IAC1C;AAAA,EACF;AAEA,iBAAe,OAAO,WAAW,QAAQ;",
  "names": []
}
