{
  "version": 3,
  "sources": ["../../../src/components/dx-text.ts"],
  "sourcesContent": ["class DomText extends HTMLElement {\n  align: string[] = [];\n  breakpoints: number[] = [0, 960, 1440];\n  color: string[] = [\"\"];\n  font: string[] = [\"primary\"];\n  size: string[] = [\"\"];\n  shadow: string[] = [];\n  spacing: string[] = [];\n  oblique: string[] = [];\n  opacity: string[] = [];\n  weight: string[] = [];\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.setupAttributes = this.setupAttributes.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n  }\n  connectedCallback() {\n    this.setupAttributes().render();\n    window.addEventListener(\"resize\", this.render);\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\"resize\", this.render);\n  }\n  render() {\n    let styles = \"\";\n    const applyStyle = (attr: string, prop: string, val: string) => {\n      if (!(<any>this)[attr] || !val) return;\n      const _val = val.slice(0, 2) === \"--\" ? `var(${val})` : val;\n      styles += `${prop}: ${_val};`;\n      return;\n    };\n    this.breakpoints.forEach((bp, i) => {\n      if (window.innerWidth > bp) {\n        applyStyle(\"align\", \"text-align\", this.align[i]);\n        applyStyle(\"color\", \"color\", this.color[i]);\n        applyStyle(\"font\", \"font-family\", this.font[i]);\n        applyStyle(\"opacity\", \"opacity\", this.opacity[i]);\n        applyStyle(\"shadow\", \"text-shadow\", this.shadow[i]);\n        applyStyle(\"size\", \"font-size\", this.size[i]);\n        applyStyle(\"spacing\", \"letter-spacing\", this.spacing[i]);\n        applyStyle(\"weight\", \"font-weight\", this.weight[i]);\n      }\n      this.styleSheet.replace(`:host { ${styles} }`);\n      console.log(styles);\n    });\n  }\n  setupAttributes() {\n    DomText.observedAttributes.forEach((attr) => {\n      const val = this.getAttribute(attr);\n      if (!val) return;\n      (<any>this)[attr] = val.split(\",\");\n    });\n    return this;\n  }\n  static get observedAttributes() {\n    return [\n      \"align\",\n      \"breakpoints\",\n      \"color\",\n      \"font\",\n      \"opacity\",\n      \"shadow\",\n      \"size\",\n      \"spacing\",\n      \"weight\",\n    ];\n  }\n}\n\ncustomElements.define(\"dx-text\", DomText);\n"],
  "mappings": "mBAAA,IAAMA,EAAN,cAAsB,WAAY,CAYhC,aAAc,CACZ,MAAM,EAZR,WAAkB,CAAC,EACnB,iBAAwB,CAAC,EAAG,IAAK,IAAI,EACrC,WAAkB,CAAC,EAAE,EACrB,UAAiB,CAAC,SAAS,EAC3B,UAAiB,CAAC,EAAE,EACpB,YAAmB,CAAC,EACpB,aAAoB,CAAC,EACrB,aAAoB,CAAC,EACrB,aAAoB,CAAC,EACrB,YAAmB,CAAC,EACpB,gBAA4B,IAAI,cAG9B,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAClC,KAAK,WAAY,UAAY,gBAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,IAAI,EACrD,KAAK,WAAY,mBAAqB,CAAC,KAAK,UAAU,CACxD,CACA,mBAAoB,CAClB,KAAK,gBAAgB,EAAE,OAAO,EAC9B,OAAO,iBAAiB,SAAU,KAAK,MAAM,CAC/C,CACA,sBAAuB,CACrB,OAAO,oBAAoB,SAAU,KAAK,MAAM,CAClD,CACA,QAAS,CACP,IAAIC,EAAS,GACPC,EAAa,CAACC,EAAcC,EAAcC,IAAgB,CAC9D,GAAI,CAAO,KAAMF,IAAS,CAACE,EAAK,OAChC,IAAMC,EAAOD,EAAI,MAAM,EAAG,CAAC,IAAM,KAAO,OAAOA,KAASA,EACxDJ,GAAU,GAAGG,MAASE,IAExB,EACA,KAAK,YAAY,QAAQ,CAACC,EAAIC,IAAM,CAC9B,OAAO,WAAaD,IACtBL,EAAW,QAAS,aAAc,KAAK,MAAMM,EAAE,EAC/CN,EAAW,QAAS,QAAS,KAAK,MAAMM,EAAE,EAC1CN,EAAW,OAAQ,cAAe,KAAK,KAAKM,EAAE,EAC9CN,EAAW,UAAW,UAAW,KAAK,QAAQM,EAAE,EAChDN,EAAW,SAAU,cAAe,KAAK,OAAOM,EAAE,EAClDN,EAAW,OAAQ,YAAa,KAAK,KAAKM,EAAE,EAC5CN,EAAW,UAAW,iBAAkB,KAAK,QAAQM,EAAE,EACvDN,EAAW,SAAU,cAAe,KAAK,OAAOM,EAAE,GAEpD,KAAK,WAAW,QAAQ,WAAWP,KAAU,EAC7C,QAAQ,IAAIA,CAAM,CACpB,CAAC,CACH,CACA,iBAAkB,CAChB,OAAAD,EAAQ,mBAAmB,QAASG,GAAS,CAC3C,IAAME,EAAM,KAAK,aAAaF,CAAI,EAC9B,CAACE,IACC,KAAMF,GAAQE,EAAI,MAAM,GAAG,EACnC,CAAC,EACM,IACT,CACA,WAAW,oBAAqB,CAC9B,MAAO,CACL,QACA,cACA,QACA,OACA,UACA,SACA,OACA,UACA,QACF,CACF,CACF,EAEA,eAAe,OAAO,UAAWL,CAAO",
  "names": ["DomText", "styles", "applyStyle", "attr", "prop", "val", "_val", "bp", "i"]
}
