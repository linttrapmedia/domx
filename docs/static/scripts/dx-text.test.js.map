{
  "version": 3,
  "sources": ["../../../src/components/dx-text.ts", "../../../src/components/dx-text.test.ts"],
  "sourcesContent": ["export class DomxText extends HTMLElement {\n  baseStyles: string[][] = [];\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: HTMLStyleElement = document.createElement(\"style\");\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.shadowRoot!.appendChild(this.styleSheet);\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    this.render();\n    window.addEventListener(\"resize\", this.render);\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\"resize\", this.render);\n  }\n  render() {\n    let styles = this.baseStyles;\n    let psuedoStyles: Record<string, [string, string][]> = {};\n    this.getAttributeNames().forEach((attributeName) => {\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [style, bp] = attr.split(\"--\");\n      const breakpoint = Number(bp ?? 0);\n      if (window.innerWidth < breakpoint) return;\n      const value = (this as any).getAttribute(attributeName);\n      if (psuedo) {\n        if (!psuedoStyles[psuedo]) psuedoStyles[psuedo] = [];\n        psuedoStyles[psuedo].push([style, value]);\n      } else {\n        styles.push([style, value]);\n      }\n    });\n\n    // generate host styles\n    const hostStyles = `:host{ ${styles\n      .map(([attr, value]) => `${attr}:${value};`)\n      .join(\"\")}}`;\n\n    // generate host psuedo styles\n    const hostPsuedoStyles = Object.entries(psuedoStyles)\n      .map(([psuedo, styles]) => {\n        const _styles = styles\n          .map(([attr, value]) => `${attr}:${value};`)\n          .join(\"\");\n        return `:host(:${psuedo}) { ${_styles} }`;\n      })\n      .join(\"\");\n\n    this.styleSheet.textContent = \"\";\n    this.styleSheet.textContent = hostStyles + hostPsuedoStyles;\n  }\n}\n\ncustomElements.define(\"dx-text\", DomxText);\n", "import { Test } from \"../types\";\nimport \"./dx-text\";\nimport { DomxText } from \"./dx-text\";\n\n// polyfillStyleSheet(DomxText);\n\nexport const CanRenderText: Test = () => {\n  const el = document.createElement(\"dx-text\") as DomxText;\n  el.setAttribute(\"font-size\", \"12px\");\n  el.innerHTML = \"<div>test</div>\";\n  const html = `<dx-text font-size=\"12px\"><div>test</div></dx-text>`;\n  const t1 = el.outerHTML === html;\n  console.log(\"computed\", el.outerHTML, el.style);\n  return { pass: t1 };\n};\n"],
  "mappings": "mBAAO,IAAMA,EAAN,cAAuB,WAAY,CAIxC,aAAc,CACZ,MAAM,EAJR,gBAAyB,CAAC,EAC1B,kBAAmD,CAAC,EACpD,gBAA+B,SAAS,cAAc,OAAO,EAG3D,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAClC,KAAK,WAAY,UAAY,gBAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,WAAY,YAAY,KAAK,UAAU,EAC3B,IAAI,iBAAkBC,GAAc,CACnDA,EAAU,QAASC,GAAa,CAC1BA,EAAS,OAAS,cAAc,KAAK,OAAO,CAClD,CAAC,CACH,CAAC,EACQ,QAAQ,KAAM,CAAE,WAAY,EAAK,CAAC,CAC7C,CACA,mBAAoB,CAClB,KAAK,OAAO,EACZ,OAAO,iBAAiB,SAAU,KAAK,MAAM,CAC/C,CACA,sBAAuB,CACrB,OAAO,oBAAoB,SAAU,KAAK,MAAM,CAClD,CACA,QAAS,CACP,IAAIC,EAAS,KAAK,WACdC,EAAmD,CAAC,EACxD,KAAK,kBAAkB,EAAE,QAASC,GAAkB,CAClD,GAAM,CAACC,EAAMC,CAAM,EAAIF,EAAc,MAAM,GAAG,EACxC,CAACG,EAAOC,CAAE,EAAIH,EAAK,MAAM,IAAI,EAC7BI,EAAa,OAAOD,GAAM,CAAC,EACjC,GAAI,OAAO,WAAaC,EAAY,OACpC,IAAMC,EAAS,KAAa,aAAaN,CAAa,EAClDE,GACGH,EAAaG,KAASH,EAAaG,GAAU,CAAC,GACnDH,EAAaG,GAAQ,KAAK,CAACC,EAAOG,CAAK,CAAC,GAExCR,EAAO,KAAK,CAACK,EAAOG,CAAK,CAAC,CAE9B,CAAC,EAGD,IAAMC,EAAa,UAAUT,EAC1B,IAAI,CAAC,CAACG,EAAMK,CAAK,IAAM,GAAGL,KAAQK,IAAQ,EAC1C,KAAK,EAAE,KAGJE,EAAmB,OAAO,QAAQT,CAAY,EACjD,IAAI,CAAC,CAACG,EAAQJ,CAAM,IAAM,CACzB,IAAMW,EAAUX,EACb,IAAI,CAAC,CAACG,EAAMK,CAAK,IAAM,GAAGL,KAAQK,IAAQ,EAC1C,KAAK,EAAE,EACV,MAAO,UAAUJ,QAAaO,KAChC,CAAC,EACA,KAAK,EAAE,EAEV,KAAK,WAAW,YAAc,GAC9B,KAAK,WAAW,YAAcF,EAAaC,CAC7C,CACF,EAEA,eAAe,OAAO,UAAWb,CAAQ,ECvDlC,IAAMe,EAAsB,IAAM,CACvC,IAAMC,EAAK,SAAS,cAAc,SAAS,EAC3CA,EAAG,aAAa,YAAa,MAAM,EACnCA,EAAG,UAAY,kBACf,IAAMC,EAAO,sDACPC,EAAKF,EAAG,YAAcC,EAC5B,eAAQ,IAAI,WAAYD,EAAG,UAAWA,EAAG,KAAK,EACvC,CAAE,KAAME,CAAG,CACpB",
  "names": ["DomxText", "mutations", "mutation", "styles", "psuedoStyles", "attributeName", "attr", "psuedo", "style", "bp", "breakpoint", "value", "hostStyles", "hostPsuedoStyles", "_styles", "CanRenderText", "el", "html", "t1"]
}
