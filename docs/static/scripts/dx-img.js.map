{
  "version": 3,
  "sources": ["../../../src/helpers.ts", "../../../src/components/dx-img.ts"],
  "sourcesContent": ["export function cssObjectToString(css: any): string {\n  let str = \"\";\n  for (let key in css) {\n    str += `${key}: ${css[key]};`;\n  }\n  return str;\n}\n\nexport function mergeByIndex(arr1: any[], arr2: any[]): any[] {\n  let merged: any[] = [...arr1];\n  for (let i = 0; i < arr2.length; i++) {\n    if (i < merged.length) {\n      merged[i] = arr2[i];\n    } else {\n      merged.push(arr2[i]);\n    }\n  }\n  return merged;\n}\n\nexport function attachShadow(el: HTMLElement, init: ShadowRootInit) {\n  el.attachShadow(init);\n}\n\nexport function attachStyles(el: HTMLElement, styles: string) {\n  let sheet = new CSSStyleSheet();\n  sheet.replace(styles);\n  el.shadowRoot!.adoptedStyleSheets = [sheet];\n  return sheet;\n}\n\nexport function attachTemplate(el: HTMLElement, template: string) {\n  const templateEl = document.createElement(\"template\");\n  templateEl.innerHTML = template;\n  const node = templateEl.content.cloneNode(true);\n  el.shadowRoot!.appendChild(node);\n  return node;\n}\n", "import {\n  attachShadow,\n  attachStyles,\n  attachTemplate,\n  mergeByIndex,\n} from \"../helpers\";\n\nconst styles = `\n:host {\n  font-size: var(--dx-text-size, 14px);\n  font-family: var(--dx-text-font, Arial);\n  color: var(--dx-text-color, #000);\n}\n:host img {\n  transition: all 0.2s ease-in-out;\n}\n`;\n\nconst template = `<slot></slot>`;\n\nclass DomImg extends HTMLElement {\n  preload: boolean = false;\n  breakpoints: number[] = [0, 960, 1440];\n  height: string[] = [\"auto\"];\n  img: HTMLImageElement;\n  \"lazy-src\": string;\n  src: string;\n  width: string[] = [\"auto\"];\n  constructor() {\n    super();\n    attachShadow(this, { mode: \"open\" });\n    attachStyles(this, styles);\n    attachTemplate(this, template);\n    this.render = this.render.bind(this);\n    this.setupImageAndLazyLoading = this.setupImageAndLazyLoading.bind(this);\n    this.setupPreloading = this.setupPreloading.bind(this);\n    this.setupAttributes = this.setupAttributes.bind(this);\n    this.connectedCallback = this.connectedCallback.bind(this);\n  }\n  connectedCallback() {\n    this.setupAttributes()\n      .setupPreloading()\n      .setupImageAndLazyLoading()\n      .render();\n    window.addEventListener(\"resize\", this.render);\n  }\n  disconnectedCallback() {\n    window.removeEventListener(\"resize\", this.render);\n  }\n  render() {\n    const width = window.innerWidth;\n    this.breakpoints.forEach((bp, i) => {\n      if (width > bp) {\n        if (this.height[i]) this.img.style.height = this.height[i];\n        if (this.width[i]) this.img.style.width = this.width[i];\n      }\n    });\n  }\n  setupAttributes() {\n    DomImg.observedAttributes.forEach((attr) => {\n      const val = this.getAttribute(attr);\n      if (!val) return;\n      if (!Array.isArray(this[attr])) return (this[attr] = val);\n      return (this[attr] = mergeByIndex(this[attr], val.split(\",\")));\n    });\n    return this;\n  }\n  setupImageAndLazyLoading() {\n    const img = document.createElement(\"img\");\n    this.shadowRoot?.appendChild(img);\n    this.img = img;\n    if (this[\"lazy-src\"]) {\n      this.img.src = this[\"lazy-src\"];\n      let observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            let target = entry.target as HTMLImageElement;\n            target.src = this.src;\n            observer.unobserve(target);\n          }\n        });\n      });\n      observer.observe(img);\n    } else {\n      this.img.src = this.src;\n    }\n    return this;\n  }\n  setupPreloading() {\n    if (this.getAttribute(\"preload\") !== null) {\n      const link = document.createElement(\"link\");\n      link.rel = \"preload\";\n      link.as = \"image\";\n      link.href = this.src;\n      document.head.appendChild(link);\n    }\n    return this;\n  }\n  static get observedAttributes() {\n    return [\"height\", \"lazy-src\", \"preload\", \"src\", \"width\"];\n  }\n}\n\ncustomElements.define(\"dx-img\", DomImg);\n"],
  "mappings": "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",
  "names": ["mergeByIndex", "arr1", "arr2", "merged", "i", "attachShadow", "el", "init", "attachStyles", "styles", "sheet", "attachTemplate", "template", "templateEl", "node", "styles", "template", "DomImg", "attachShadow", "attachStyles", "attachTemplate", "width", "bp", "i", "attr", "val", "mergeByIndex", "img", "entries", "observer", "entry", "target", "link"]
}
