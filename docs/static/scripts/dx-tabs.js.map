{
  "version": 3,
  "sources": ["../../../src/components/dx-tabs.ts"],
  "sourcesContent": ["type Tab = {\n  label: string;\n  name: string;\n  icon: string;\n  content: HTMLElement;\n};\n\nexport class DomxTabs extends HTMLElement {\n  behaviorAttributeNames: string[] = [];\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  tabs: Record<string, Tab> = {};\n  tabsContainer: HTMLDivElement = document.createElement(\"div\");\n  panelsContainer: HTMLDivElement = document.createElement(\"div\");\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.addTab = this.addTab.bind(this);\n    this.updateActiveTab = this.updateActiveTab.bind(this);\n    this.updateTab = this.updateTab.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === \"attributes\" &&\n          mutation.attributeName === \"selected\" &&\n          mutation.target instanceof DomxTabs\n        ) {\n          this.updateActiveTab();\n        }\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  addTab(tab: Tab) {\n    this.tabs[tab.name] = tab;\n    const tabButton = document.createElement(\"button\");\n    tabButton.setAttribute(\"name\", tab.name);\n    tabButton.innerText = tab.label;\n    tabButton.classList.add(\"tab\");\n    tabButton.onclick = () => {\n      this.setAttribute(\"selected\", tab.name);\n      this.updateActiveTab();\n    };\n    this.tabsContainer.appendChild(tabButton);\n    const tabPanel = document.createElement(\"div\");\n    tabPanel.setAttribute(\"name\", tab.name);\n    tabPanel.appendChild(tab.content);\n    tabPanel.classList.add(\"panel\");\n    this.panelsContainer.appendChild(tabPanel);\n\n    const selected = this.getAttribute(\"selected\");\n    if (selected === tab.name) tabPanel.classList.add(\"panel--active\");\n    if (selected === tab.name) tabButton.classList.add(\"tab--active\");\n  }\n  updateActiveTab() {\n    const tabName = this.getAttribute(\"selected\");\n\n    const tabs = this.tabsContainer.querySelectorAll(\".tab\");\n    tabs.forEach((tab) => tab.classList.remove(\"tab--active\"));\n    const selectedTab = this.tabsContainer.querySelector(`[name=${tabName}]`);\n    if (selectedTab) selectedTab.classList.add(\"tab--active\");\n\n    const panels = this.panelsContainer.querySelectorAll(\".panel\");\n    panels.forEach((panel) => panel.classList.remove(\"panel--active\"));\n    const selectedPanel = this.panelsContainer.querySelector(\n      `[name=${tabName}]`\n    );\n    if (selectedPanel) selectedPanel.classList.add(\"panel--active\");\n  }\n  connectedCallback() {\n    this.render();\n  }\n  renderCss() {\n    return `\n        .tabs-container {\n            display: flex;\n            flex-direction: row;\n            border-bottom: 2px solid rgba(255,255,255,0.2);\n        }\n        .tab {\n            background-color: transparent;\n            border-left: none;\n            border-right: none;\n            border-top: none;\n            border-bottom: 2px solid transparent;\n            color: white;\n            padding: 10px;\n            cursor: pointer;\n            margin-bottom:-2px;\n        }\n        .tab--active {\n            border-bottom: 2px solid white;\n        }\n        .panels-container {\n            display: flex;\n            flex-direction: row;\n            gap: 10px;\n        }\n        .panel {\n            display: none;\n            padding: 20px 0;\n        }\n        .panel--active {\n            display: block;\n        }\n    `;\n  }\n  render() {\n    this.tabsContainer.classList.add(\"tabs-container\");\n    this.panelsContainer.classList.add(\"panels-container\");\n    this.shadowRoot!.appendChild(this.tabsContainer);\n    this.shadowRoot!.appendChild(this.panelsContainer);\n    this.styleSheet.replace(this.renderCss());\n    this.dispatchEvent(new CustomEvent(\"rendered\"));\n  }\n  updateTab(tab: Tab) {\n    this.tabs[tab.name] = tab;\n    const tabButton = this.tabsContainer.querySelector(`[name=${tab.name}]`);\n    if (tabButton) (tabButton as HTMLElement).innerText = tab.label;\n    const tabPanel = this.panelsContainer.querySelector(`[name=${tab.name}]`);\n    if (tabPanel) tabPanel.replaceWith(tab.content);\n  }\n}\n\ncustomElements.define(\"dx-tabs\", DomxTabs);\n\nexport class DomxTab extends HTMLElement {\n  behaviorAttributeNames: string[] = [\"label\", \"icon\"];\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  addedToTabs: boolean = false;\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    this.render();\n  }\n  render() {\n    const parentTabs = this.parentElement as DomxTabs;\n    if (!this.addedToTabs) {\n      if (parentTabs instanceof DomxTabs) {\n        parentTabs.addTab({\n          label: this.getAttribute(\"label\") || \"\",\n          name: this.getAttribute(\"name\") || \"\",\n          icon: this.getAttribute(\"icon\") || \"\",\n          content: this.shadowRoot!.querySelector(\n            \"slot\"\n          )?.assignedNodes()[0] as HTMLElement,\n        });\n        this.addedToTabs = true;\n      }\n    } else {\n      parentTabs.updateTab({\n        label: this.getAttribute(\"label\") || \"\",\n        name: this.getAttribute(\"name\") || \"\",\n        icon: this.getAttribute(\"icon\") || \"\",\n        content: this.shadowRoot!.querySelector(\n          \"slot\"\n        )?.assignedNodes()[0] as HTMLElement,\n      });\n    }\n    this.dispatchEvent(new CustomEvent(\"rendered\"));\n  }\n}\n\ncustomElements.define(\"dx-tab\", DomxTab);\n"],
  "mappings": "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",
  "names": ["DomxTabs", "mutations", "mutation", "tab", "tabButton", "tabPanel", "selected", "tabName", "selectedTab", "panel", "selectedPanel", "DomxTab", "parentTabs"]
}
