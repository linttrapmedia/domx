{
  "version": 3,
  "sources": ["../../../src/components/dx-base.ts"],
  "sourcesContent": ["export type DxStyle = [\n  bp: string,\n  prop: string,\n  val: string,\n  psuedo?: string,\n  subSelector?: string\n];\n\nexport class DomxBase extends HTMLElement {\n  baseStyles: DxStyle[] = [];\n  props: string[] = [];\n  rendered: boolean = false;\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.getStylesFromEl = this.getStylesFromEl.bind(this);\n  }\n  connectedCallback() {\n    this.render();\n    this.dispatchEvent(new CustomEvent(\"rendered\"));\n    this.rendered = true;\n  }\n  renderCss(styles: DxStyle[]) {\n    const renderedStyles = styles\n      .sort((a) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(([bp = \"0\", prop, val, psuedo, sub = \"\"]) => {\n        const subSelector = `${sub !== \"\" ? `::slotted(${sub})` : \"\"}`;\n        return `@media (min-width: ${bp}px) { :host${\n          psuedo ? `(:${psuedo}) ${subSelector}` : subSelector\n        } { ${prop}:${val}; }}`;\n      })\n      .join(\"\\n\");\n    return renderedStyles;\n  }\n  getStylesFromEl(el: HTMLElement, subSelector?: string): DxStyle[] {\n    const inlineStyles: DxStyle[] = el\n      .getAttributeNames()\n      .filter((attr) => !this.props.includes(attr))\n      .map((attributeName) => {\n        const [attr, psuedo] = attributeName.split(\":\");\n        const [prop, bp] = attr.split(\"--\");\n        const value = el.getAttribute(attributeName) ?? \"\";\n        return [bp, prop, value, psuedo, subSelector];\n      });\n\n    return [...this.baseStyles, ...inlineStyles];\n  }\n  render() {}\n}\n"],
  "mappings": "mBAQO,IAAMA,EAAN,cAAuB,WAAY,CAKxC,aAAc,CACZ,MAAM,EALR,gBAAwB,CAAC,EACzB,WAAkB,CAAC,EACnB,cAAoB,GACpB,gBAA4B,IAAI,cAG9B,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAClC,KAAK,WAAY,UAAY,gBAC7B,KAAK,WAAY,mBAAqB,CAAC,KAAK,UAAU,EACtD,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,IAAI,CACvD,CACA,mBAAoB,CAClB,KAAK,OAAO,EACZ,KAAK,cAAc,IAAI,YAAY,UAAU,CAAC,EAC9C,KAAK,SAAW,EAClB,CACA,UAAUC,EAAmB,CAW3B,OAVuBA,EACpB,KAAMC,GAAOA,EAAE,GAAK,EAAI,EAAG,EAC3B,KAAK,CAACA,EAAGC,IAAM,OAAOD,EAAE,EAAE,EAAI,OAAOC,EAAE,EAAE,CAAC,EAC1C,IAAI,CAAC,CAACC,EAAK,IAAKC,EAAMC,EAAKC,EAAQC,EAAM,EAAE,IAAM,CAChD,IAAMC,EAAc,GAAGD,IAAQ,GAAK,aAAaA,KAAS,KAC1D,MAAO,sBAAsBJ,eAC3BG,EAAS,KAAKA,MAAWE,IAAgBA,OACrCJ,KAAQC,OAChB,CAAC,EACA,KAAK;AAAA,CAAI,CAEd,CACA,gBAAgBI,EAAiBD,EAAiC,CAChE,IAAME,EAA0BD,EAC7B,kBAAkB,EAClB,OAAQE,GAAS,CAAC,KAAK,MAAM,SAASA,CAAI,CAAC,EAC3C,IAAKC,GAAkB,CACtB,GAAM,CAACD,EAAML,CAAM,EAAIM,EAAc,MAAM,GAAG,EACxC,CAACR,EAAMD,CAAE,EAAIQ,EAAK,MAAM,IAAI,EAC5BE,EAAQJ,EAAG,aAAaG,CAAa,GAAK,GAChD,MAAO,CAACT,EAAIC,EAAMS,EAAOP,EAAQE,CAAW,CAC9C,CAAC,EAEH,MAAO,CAAC,GAAG,KAAK,WAAY,GAAGE,CAAY,CAC7C,CACA,QAAS,CAAC,CACZ",
  "names": ["DomxBase", "styles", "a", "b", "bp", "prop", "val", "psuedo", "sub", "subSelector", "el", "inlineStyles", "attr", "attributeName", "value"]
}
