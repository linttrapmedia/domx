{
  "version": 3,
  "sources": ["../../../src/components/dx-anchor.ts"],
  "sourcesContent": ["export class DomxAnchor extends HTMLElement {\n  anchor: HTMLAnchorElement = document.createElement(\"a\");\n  behaviorAttributeNames: string[] = [\"href\", \"target\"];\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    this.render();\n  }\n  renderCss(attributes: string[]) {\n    let styles: [bp: string, prop: string, val: string, psuedo: string][] = [\n      [\"0\", \"cursor\", \"pointer\", \"\"],\n      [\"0\", \"display\", \"inline-block\", \"\"],\n      [\"0\", \"box-sizing\", \"border-box\", \"\"],\n    ];\n    for (let i = 0; i < attributes.length; i++) {\n      const attributeName = attributes[i];\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [prop, bp = \"0\"] = attr.split(\"--\");\n      const value = (this as any).getAttribute(attributeName);\n      styles.push([bp, prop, value, psuedo]);\n    }\n    const renderedStyles = styles\n      .sort((a) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(\n        ([bp, prop, val, psuedo]) =>\n          `@media (min-width: ${bp}px) { :host ${\n            psuedo ? `a:${psuedo}` : \"a\"\n          } { ${prop}:${val}; }}`\n      )\n      .join(\"\\n\");\n    return renderedStyles;\n  }\n  render() {\n    this.anchor.setAttribute(\"href\", this.getAttribute(\"href\") ?? \"#\"); // Get the href attribute from the custom element\n    this.anchor.innerText = this.innerText; // Set the text inside the custom element\n    this.anchor.setAttribute(\"target\", this.getAttribute(\"target\") ?? \"_self\"); // Get the target attribute from the custom element\n    this.innerHTML = \"\"; // Clear the custom element\n    this.shadowRoot!.appendChild(this.anchor);\n    const styleAttributes = this.getAttributeNames().filter(\n      (attr) => !this.behaviorAttributeNames.includes(attr)\n    );\n    this.styleSheet.replace(this.renderCss(styleAttributes));\n    this.dispatchEvent(new CustomEvent(\"rendered\"));\n  }\n}\n\ncustomElements.define(\"dx-anchor\", DomxAnchor);\n"],
  "mappings": "mBAAO,IAAMA,EAAN,cAAyB,WAAY,CAI1C,aAAc,CACZ,MAAM,EAJR,YAA4B,SAAS,cAAc,GAAG,EACtD,4BAAmC,CAAC,OAAQ,QAAQ,EACpD,gBAA4B,IAAI,cAG9B,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAClC,KAAK,WAAY,UAAY,gBAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,WAAY,mBAAqB,CAAC,KAAK,UAAU,EACrC,IAAI,iBAAkBC,GAAc,CACnDA,EAAU,QAASC,GAAa,CAC1BA,EAAS,OAAS,cAAc,KAAK,OAAO,CAClD,CAAC,CACH,CAAC,EACQ,QAAQ,KAAM,CAAE,WAAY,EAAK,CAAC,CAC7C,CACA,mBAAoB,CAClB,KAAK,OAAO,CACd,CACA,UAAUC,EAAsB,CAC9B,IAAIC,EAAoE,CACtE,CAAC,IAAK,SAAU,UAAW,EAAE,EAC7B,CAAC,IAAK,UAAW,eAAgB,EAAE,EACnC,CAAC,IAAK,aAAc,aAAc,EAAE,CACtC,EACA,QAASC,EAAI,EAAGA,EAAIF,EAAW,OAAQE,IAAK,CAC1C,IAAMC,EAAgBH,EAAWE,GAC3B,CAACE,EAAMC,CAAM,EAAIF,EAAc,MAAM,GAAG,EACxC,CAACG,EAAMC,EAAK,GAAG,EAAIH,EAAK,MAAM,IAAI,EAClCI,EAAS,KAAa,aAAaL,CAAa,EACtDF,EAAO,KAAK,CAACM,EAAID,EAAME,EAAOH,CAAM,CAAC,CACvC,CAWA,OAVuBJ,EACpB,KAAMQ,GAAOA,EAAE,GAAK,EAAI,EAAG,EAC3B,KAAK,CAACA,EAAGC,IAAM,OAAOD,EAAE,EAAE,EAAI,OAAOC,EAAE,EAAE,CAAC,EAC1C,IACC,CAAC,CAACH,EAAID,EAAMK,EAAKN,CAAM,IACrB,sBAAsBE,gBACpBF,EAAS,KAAKA,IAAW,SACrBC,KAAQK,OAClB,EACC,KAAK;AAAA,CAAI,CAEd,CACA,QAAS,CACP,KAAK,OAAO,aAAa,OAAQ,KAAK,aAAa,MAAM,GAAK,GAAG,EACjE,KAAK,OAAO,UAAY,KAAK,UAC7B,KAAK,OAAO,aAAa,SAAU,KAAK,aAAa,QAAQ,GAAK,OAAO,EACzE,KAAK,UAAY,GACjB,KAAK,WAAY,YAAY,KAAK,MAAM,EACxC,IAAMC,EAAkB,KAAK,kBAAkB,EAAE,OAC9CR,GAAS,CAAC,KAAK,uBAAuB,SAASA,CAAI,CACtD,EACA,KAAK,WAAW,QAAQ,KAAK,UAAUQ,CAAe,CAAC,EACvD,KAAK,cAAc,IAAI,YAAY,UAAU,CAAC,CAChD,CACF,EAEA,eAAe,OAAO,YAAaf,CAAU",
  "names": ["DomxAnchor", "mutations", "mutation", "attributes", "styles", "i", "attributeName", "attr", "psuedo", "prop", "bp", "value", "a", "b", "val", "styleAttributes"]
}
