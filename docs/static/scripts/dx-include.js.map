{
  "version": 3,
  "sources": ["../../../node_modules/dompurify/src/utils.js", "../../../node_modules/dompurify/src/tags.js", "../../../node_modules/dompurify/src/attrs.js", "../../../node_modules/dompurify/src/regexp.js", "../../../node_modules/dompurify/src/purify.js", "../../../src/components/dx-include.ts"],
  "sourcesContent": ["const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array, transformCaseFunc = stringToLowerCase) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue() {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nconst getGlobal = function () {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, purifyHostElement) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (\u00A77.3.3)\n   *   - DOM Tree Accessors (\u00A73.1.5)\n   *   - Form Element Parent-Child Relations (\u00A74.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (\u00A74.8.5)\n   *   - HTMLCollection (\u00A74.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg = {}) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n          cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n          cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName) {\n    return tagName !== 'annotation-xml' && tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n", "import * as DOMPurify from \"dompurify\";\n\nexport class DomxInclude extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  static get observedAttributes() {\n    return [\"src\", \"onload\"];\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (name === \"src\" && newValue !== oldValue) this.loadContent(newValue);\n  }\n\n  async loadContent(src: string) {\n    try {\n      const response = await fetch(src);\n      if (!response.ok) throw new Error(`${src} not found`);\n      const text = await response.text();\n      this.innerHTML = this.sanitizeHTML(text);\n      this.dispatchEvent(new CustomEvent(\"loaded\"));\n      this.offsetWidth; // force reflow\n    } catch (error) {\n      console.error(error);\n      this.innerHTML = `<p>Error loading content from ${src}</p>`;\n    }\n  }\n\n  sanitizeHTML(html: string) {\n    return DOMPurify.sanitize(html, {\n      CUSTOM_ELEMENT_HANDLING: {\n        tagNameCheck: /^dx-/, // Only allow custom elements starting with dx-\n        attributeNameCheck: /./, // Allow all attributes\n        allowCustomizedBuiltInElements: true, // Customized built-ins are allowed\n      },\n    });\n  }\n}\n\ncustomElements.define(\"dx-include\", DomxInclude);\n"],
  "mappings": "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OAAO;AACLF,0BAAUC,YAAYC;cACxB;YACF;UACF;AAEA,iBAAOF;QACT;AASA,iBAASK,aAAaN,QAAQO,MAAM;AAClC,iBAAOP,WAAW,MAAM;AACtB,kBAAMQ,OAAOvE,yBAAyB+D,QAAQO,IAAI;AAElD,gBAAIC,MAAM;AACR,kBAAIA,KAAKC,KAAK;AACZ,uBAAO1D,QAAQyD,KAAKC,GAAG;cACzB;AAEA,kBAAI,OAAOD,KAAKL,UAAU,YAAY;AACpC,uBAAOpD,QAAQyD,KAAKL,KAAK;cAC3B;YACF;AAEAH,qBAAShE,eAAegE,MAAM;UAChC;AAEA,mBAASU,gBAAgB;AACvB,mBAAO;UACT;AAEA,iBAAOA;QACT;AC1LO,cAAMC,SAAOxE,OAAO,CACzB,KACA,QACA,WACA,WACA,QACA,WACA,SACA,SACA,KACA,OACA,OACA,OACA,SACA,cACA,QACA,MACA,UACA,UACA,WACA,UACA,QACA,QACA,OACA,YACA,WACA,QACA,YACA,MACA,aACA,OACA,WACA,OACA,UACA,OACA,OACA,MACA,MACA,WACA,MACA,YACA,cACA,UACA,QACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,UACA,UACA,MACA,QACA,KACA,OACA,SACA,OACA,OACA,SACA,UACA,MACA,QACA,OACA,QACA,WACA,QACA,YACA,SACA,OACA,QACA,MACA,YACA,UACA,UACA,KACA,WACA,OACA,YACA,KACA,MACA,MACA,QACA,KACA,QACA,WACA,UACA,UACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,OACA,SACA,SACA,MACA,YACA,YACA,SACA,MACA,SACA,QACA,MACA,SACA,MACA,KACA,MACA,OACA,SACA,KAAK,CACN;AAGM,cAAMyE,QAAMzE,OAAO,CACxB,OACA,KACA,YACA,eACA,gBACA,gBACA,iBACA,oBACA,UACA,YACA,QACA,QACA,WACA,UACA,QACA,KACA,SACA,YACA,SACA,SACA,QACA,kBACA,UACA,QACA,YACA,SACA,QACA,WACA,WACA,YACA,kBACA,QACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,QACA,SACA,QACA,OAAO,CACR;AAEM,cAAM0E,aAAa1E,OAAO,CAC/B,WACA,iBACA,uBACA,eACA,oBACA,qBACA,qBACA,kBACA,gBACA,WACA,WACA,WACA,WACA,WACA,kBACA,WACA,WACA,eACA,gBACA,YACA,gBACA,sBACA,eACA,UACA,cAAc,CACf;AAMM,cAAM2E,gBAAgB3E,OAAO,CAClC,WACA,iBACA,UACA,WACA,aACA,oBACA,kBACA,iBACA,iBACA,iBACA,SACA,aACA,QACA,gBACA,aACA,WACA,iBACA,UACA,OACA,cACA,WACA,KAAK,CACN;AAEM,cAAM4E,WAAS5E,OAAO,CAC3B,QACA,YACA,UACA,WACA,SACA,UACA,MACA,cACA,iBACA,MACA,MACA,SACA,WACA,YACA,SACA,QACA,MACA,UACA,SACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA,cACA,aAAa,CACd;AAIM,cAAM6E,mBAAmB7E,OAAO,CACrC,WACA,eACA,cACA,YACA,aACA,WACA,WACA,UACA,UACA,SACA,aACA,cACA,kBACA,eACA,MAAM,CACP;AAEM,cAAM8E,OAAO9E,OAAO,CAAC,OAAO,CAAC;ACrR7B,cAAMwE,OAAOxE,OAAO,CACzB,UACA,UACA,SACA,OACA,kBACA,gBACA,wBACA,YACA,cACA,WACA,UACA,WACA,eACA,eACA,WACA,QACA,SACA,SACA,SACA,QACA,WACA,YACA,gBACA,UACA,eACA,YACA,YACA,WACA,OACA,YACA,2BACA,yBACA,YACA,aACA,WACA,gBACA,QACA,OACA,WACA,UACA,UACA,QACA,QACA,YACA,MACA,aACA,aACA,SACA,QACA,SACA,QACA,QACA,WACA,QACA,OACA,OACA,aACA,SACA,UACA,OACA,aACA,YACA,SACA,QACA,SACA,WACA,cACA,UACA,QACA,WACA,WACA,eACA,eACA,UACA,WACA,WACA,cACA,YACA,OACA,YACA,OACA,YACA,QACA,QACA,WACA,cACA,SACA,YACA,SACA,QACA,SACA,QACA,WACA,SACA,OACA,UACA,QACA,SACA,WACA,YACA,SACA,aACA,QACA,UACA,UACA,SACA,SACA,SACA,MAAM,CACP;AAEM,cAAMyE,MAAMzE,OAAO,CACxB,iBACA,cACA,YACA,sBACA,UACA,iBACA,iBACA,WACA,iBACA,kBACA,SACA,QACA,MACA,SACA,QACA,iBACA,aACA,aACA,SACA,uBACA,+BACA,iBACA,mBACA,MACA,MACA,KACA,MACA,MACA,mBACA,aACA,WACA,WACA,OACA,YACA,aACA,OACA,QACA,gBACA,aACA,UACA,eACA,eACA,iBACA,eACA,aACA,oBACA,gBACA,cACA,gBACA,eACA,MACA,MACA,MACA,MACA,cACA,YACA,iBACA,qBACA,UACA,QACA,MACA,mBACA,MACA,OACA,KACA,MACA,MACA,MACA,MACA,WACA,aACA,cACA,YACA,QACA,gBACA,kBACA,gBACA,oBACA,kBACA,SACA,cACA,cACA,gBACA,gBACA,eACA,eACA,oBACA,aACA,OACA,QACA,SACA,UACA,QACA,OACA,QACA,cACA,UACA,YACA,WACA,SACA,UACA,eACA,UACA,YACA,eACA,QACA,cACA,uBACA,oBACA,gBACA,UACA,iBACA,uBACA,kBACA,KACA,MACA,MACA,UACA,QACA,QACA,eACA,aACA,WACA,UACA,UACA,SACA,QACA,mBACA,oBACA,oBACA,gBACA,eACA,gBACA,eACA,cACA,gBACA,oBACA,qBACA,kBACA,mBACA,qBACA,kBACA,UACA,gBACA,SACA,gBACA,kBACA,YACA,WACA,WACA,aACA,oBACA,eACA,mBACA,kBACA,cACA,QACA,MACA,MACA,WACA,UACA,WACA,cACA,WACA,cACA,iBACA,iBACA,SACA,gBACA,QACA,gBACA,oBACA,oBACA,KACA,MACA,MACA,SACA,KACA,MACA,MACA,KACA,YAAY,CACb;AAEM,cAAM4E,SAAS5E,OAAO,CAC3B,UACA,eACA,SACA,YACA,SACA,gBACA,eACA,cACA,cACA,SACA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",
  "names": ["entries", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "Object", "freeze", "seal", "create", "apply", "construct", "Reflect", "x", "fun", "thisValue", "args", "Func", "arrayForEach", "unapply", "Array", "prototype", "forEach", "arrayPop", "pop", "arrayPush", "push", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "objectHasOwnProperty", "hasOwnProperty", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "func", "thisArg", "_len", "arguments", "length", "_key", "_len2", "_key2", "addToSet", "set", "array", "transformCaseFunc", "undefined", "l", "element", "lcElement", "cleanArray", "index", "isPropertyExist", "clone", "object", "newObject", "property", "value", "isArray", "constructor", "lookupGetter", "prop", "desc", "get", "fallbackValue", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "purifyHostElement", "createPolicy", "suffix", "ATTR_NAME", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "_", "console", "warn", "createDOMPurify", "DOMPurify", "root", "version", "VERSION", "removed", "document", "nodeType", "isSupported", "originalDocument", "currentScript", "DocumentFragment", "HTMLTemplateElement", "Node", "Element", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "hooks", "createHTMLDocument", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "SAFE_FOR_TEMPLATES", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "TRUSTED_TYPES_POLICY", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "parentNode", "removeChild", "remove", "_removeAttribute", "name", "attribute", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createNodeIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "_isClobbered", "elm", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHook", "entryPoint", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_isBasicCustomElement", "childCount", "i", "expr", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "attr", "forceKeepAttr", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "returnNode", "appendChild", "firstChild", "nodeIterator", "shadowroot", "shadowrootmode", "serializedHTML", "outerHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "hookFunction", "removeHook", "removeHooks", "removeAllHooks"]
}
