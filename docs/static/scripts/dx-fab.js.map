{
  "version": 3,
  "sources": ["../../../src/components/dx-fab.ts"],
  "sourcesContent": ["export class DomxFAB extends HTMLElement {\n  behaviorAttributeNames: string[] = [\n    \"container\",\n    \"min-scroll-x\",\n    \"max-scroll-x\",\n    \"min-scroll-y\",\n    \"max-scroll-y\",\n  ];\n  baseStyles: string = `:host { box-sizing: border-box; display: flex; }`;\n  container: Element | Window | null = null;\n  minScrollX: number = 0;\n  maxScrollX: number = 10000000000000000;\n  minScrollY: number = 0;\n  maxScrollY: number = 10000000000000000;\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    if (this.hasAttribute(\"container\")) {\n      this.container = document.querySelector(this.getAttribute(\"container\")!);\n    } else {\n      this.container = window;\n    }\n    if (this.hasAttribute(\"min-scroll-x\"))\n      this.minScrollX = Number(this.getAttribute(\"min-scroll-x\")!);\n    if (this.hasAttribute(\"max-scroll-x\"))\n      this.maxScrollX = Number(this.getAttribute(\"max-scroll-x\")!);\n    if (this.hasAttribute(\"min-scroll-y\"))\n      this.minScrollY = Number(this.getAttribute(\"min-scroll-y\")!);\n    if (this.hasAttribute(\"max-scroll-y\"))\n      this.maxScrollY = Number(this.getAttribute(\"max-scroll-y\")!);\n    this.container?.addEventListener(\"scroll\", this.showHide);\n    this.render();\n    this.showHide();\n  }\n  renderCss(attributes: string[]) {\n    let styles: [bp: string, prop: string, val: string, psuedo: string][] = [\n      [\"0\", \"z-index\", \"1000\", \"\"],\n      [\"0\", \"position\", \"fixed\", \"\"],\n      [\"0\", \"bottom\", \"30px\", \"\"],\n      [\"0\", \"right\", \"20px\", \"\"],\n    ];\n    for (let i = 0; i < attributes.length; i++) {\n      const attributeName = attributes[i];\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [prop, bp = \"0\"] = attr.split(\"--\");\n      const value = (this as any).getAttribute(attributeName);\n      styles.push([bp, prop, value, psuedo]);\n    }\n    const renderedStyles = styles\n      .sort((a, b) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(\n        ([bp, prop, val, psuedo]) =>\n          `@media (min-width: ${bp}px) { :host${\n            psuedo ? `:${psuedo}` : \"\"\n          } { ${prop}:${val}; }}`\n      )\n      .join(\"\\n\");\n    return this.baseStyles + renderedStyles;\n  }\n  render() {\n    const styleAttributes = this.getAttributeNames().filter(\n      (attr) => !this.behaviorAttributeNames.includes(attr)\n    );\n    this.styleSheet.replace(this.renderCss(styleAttributes));\n  }\n  showHide() {\n    if (this.container === null) return;\n    if (this.container instanceof Window) {\n      if (this.container.scrollY > this.minScrollY) {\n        this.style.display = \"block\";\n      } else {\n        this.style.display = \"none\";\n      }\n    } else {\n      if (\n        this.container.scrollTop > this.minScrollY &&\n        this.container.scrollTop < this.maxScrollY\n      ) {\n        this.style.display = \"block\";\n      } else {\n        this.style.display = \"none\";\n      }\n    }\n  }\n}\n\ncustomElements.define(\"dx-fab\", DomxFAB);\n"],
  "mappings": "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",
  "names": []
}
