{
  "version": 3,
  "sources": ["../src/components/dx-fab.ts"],
  "sourcesContent": ["export class DomxFAB extends HTMLElement {\n  behaviorAttributeNames: string[] = [\n    \"container\",\n    \"min-scroll-x\",\n    \"max-scroll-x\",\n    \"min-scroll-y\",\n    \"max-scroll-y\",\n  ];\n  baseStyles: string = `:host { box-sizing: border-box; display: flex; }`;\n  container: Element | Window | null = null;\n  minScrollX: number = 0;\n  maxScrollX: number = 10000000000000000;\n  minScrollY: number = 0;\n  maxScrollY: number = 10000000000000000;\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"attributes\") this.render();\n      });\n    });\n    observer.observe(this, { attributes: true });\n  }\n  connectedCallback() {\n    if (this.hasAttribute(\"container\")) {\n      this.container = document.querySelector(this.getAttribute(\"container\")!);\n    } else {\n      this.container = window;\n    }\n    if (this.hasAttribute(\"min-scroll-x\"))\n      this.minScrollX = Number(this.getAttribute(\"min-scroll-x\")!);\n    if (this.hasAttribute(\"max-scroll-x\"))\n      this.maxScrollX = Number(this.getAttribute(\"max-scroll-x\")!);\n    if (this.hasAttribute(\"min-scroll-y\"))\n      this.minScrollY = Number(this.getAttribute(\"min-scroll-y\")!);\n    if (this.hasAttribute(\"max-scroll-y\"))\n      this.maxScrollY = Number(this.getAttribute(\"max-scroll-y\")!);\n    this.container?.addEventListener(\"scroll\", this.showHide);\n    this.render();\n    this.showHide();\n  }\n  renderCss(attributes: string[]) {\n    let styles: [bp: string, prop: string, val: string, psuedo: string][] = [\n      [\"0\", \"z-index\", \"1000\", \"\"],\n      [\"0\", \"position\", \"fixed\", \"\"],\n      [\"0\", \"bottom\", \"30px\", \"\"],\n      [\"0\", \"right\", \"20px\", \"\"],\n    ];\n    for (let i = 0; i < attributes.length; i++) {\n      const attributeName = attributes[i];\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [prop, bp = \"0\"] = attr.split(\"--\");\n      const value = (this as any).getAttribute(attributeName);\n      styles.push([bp, prop, value, psuedo]);\n    }\n    const renderedStyles = styles\n      .sort((a, b) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(\n        ([bp, prop, val, psuedo]) =>\n          `@media (min-width: ${bp}px) { :host${\n            psuedo ? `(:${psuedo})` : \"\"\n          } { ${prop}:${val}; }}`\n      )\n      .join(\"\\n\");\n    return this.baseStyles + renderedStyles;\n  }\n  render() {\n    const styleAttributes = this.getAttributeNames().filter(\n      (attr) => !this.behaviorAttributeNames.includes(attr)\n    );\n    this.styleSheet.replace(this.renderCss(styleAttributes));\n  }\n  showHide() {\n    if (this.container === null) return;\n    if (this.container instanceof Window) {\n      if (this.container.scrollY > this.minScrollY) {\n        this.style.display = \"block\";\n      } else {\n        this.style.display = \"none\";\n      }\n    } else {\n      if (\n        this.container.scrollTop > this.minScrollY &&\n        this.container.scrollTop < this.maxScrollY\n      ) {\n        this.style.display = \"block\";\n      } else {\n        this.style.display = \"none\";\n      }\n    }\n  }\n}\n\ncustomElements.define(\"dx-fab\", DomxFAB);\n"],
  "mappings": "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",
  "names": ["DomxFAB", "mutations", "mutation", "attributes", "styles", "i", "attributeName", "attr", "psuedo", "prop", "bp", "value", "renderedStyles", "a", "b", "val", "styleAttributes"]
}
