{
  "version": 3,
  "sources": ["../src/components/dx-is.ts"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", function () {\n  // register component\n  function register(el: HTMLElement) {\n    const tagName = el.getAttribute(\"is\")!;\n    const attributes = el.attributes;\n    const tag = document.createElement(tagName);\n    // transfer attributes\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      if (attr.name === \"is\") continue;\n      tag.setAttribute(attr.name, attr.value);\n    }\n    // transfer text content\n    tag.textContent = el.textContent;\n    el.replaceWith(tag);\n  }\n\n  // dx element check\n  function isDxElement(el: Element) {\n    return el.getAttribute(\"is\")?.startsWith(\"dx-\") ?? false;\n  }\n\n  // auto register onload\n  const elements = document.querySelectorAll(\"[is]\");\n  elements.forEach((el) => {\n    if (isDxElement(el)) register(el as HTMLElement);\n  });\n\n  // auto register on mutation\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.addedNodes.length > 0 && mutation.type === \"childList\") {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === Node.ELEMENT_NODE && isDxElement(node as HTMLElement)) {\n            register(node as HTMLElement);\n          }\n        });\n      }\n    });\n  });\n  observer.observe(this, { attributes: false, childList: true, subtree: true });\n});\n"],
  "mappings": "mBAAA,SAAS,iBAAiB,mBAAoB,UAAY,CAExD,SAASA,EAASC,EAAiB,CACjC,IAAMC,EAAUD,EAAG,aAAa,IAAI,EAC9BE,EAAaF,EAAG,WAChBG,EAAM,SAAS,cAAcF,CAAO,EAE1C,QAASG,EAAI,EAAGA,EAAIF,EAAW,OAAQE,IAAK,CAC1C,IAAMC,EAAOH,EAAWE,GACpBC,EAAK,OAAS,MAClBF,EAAI,aAAaE,EAAK,KAAMA,EAAK,KAAK,CACxC,CAEAF,EAAI,YAAcH,EAAG,YACrBA,EAAG,YAAYG,CAAG,CACpB,CAGA,SAASG,EAAYN,EAAa,CAChC,OAAOA,EAAG,aAAa,IAAI,GAAG,WAAW,KAAK,GAAK,EACrD,CAGiB,SAAS,iBAAiB,MAAM,EACxC,QAASA,GAAO,CACnBM,EAAYN,CAAE,GAAGD,EAASC,CAAiB,CACjD,CAAC,EAGgB,IAAI,iBAAkBO,GAAc,CACnDA,EAAU,QAASC,GAAa,CAC1BA,EAAS,WAAW,OAAS,GAAKA,EAAS,OAAS,aACtDA,EAAS,WAAW,QAASC,GAAS,CAChCA,EAAK,WAAa,KAAK,cAAgBH,EAAYG,CAAmB,GACxEV,EAASU,CAAmB,CAEhC,CAAC,CAEL,CAAC,CACH,CAAC,EACQ,QAAQ,KAAM,CAAE,WAAY,GAAO,UAAW,GAAM,QAAS,EAAK,CAAC,CAC9E,CAAC",
  "names": ["register", "el", "tagName", "attributes", "tag", "i", "attr", "isDxElement", "mutations", "mutation", "node"]
}
