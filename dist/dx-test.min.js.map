{
  "version": 3,
  "sources": ["../node_modules/@linttrap/oem/src/html/HTML.ts", "../src/components/dx-test.ts"],
  "sourcesContent": ["import { HtmlReturnType } from '../types';\n\nconst selectorMap = new Map<string, [any[], any]>();\n\nconst matchObserver = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.addedNodes.length > 0 && mutation.type === 'childList') {\n      for (const node of mutation.addedNodes) {\n        if (node instanceof Element) {\n          for (const [selector, [props, config]] of selectorMap.entries()) {\n            const els = node.querySelectorAll(selector);\n            for (const el of els) HtmlTag(el as HTMLElement, props, config);\n          }\n        }\n      }\n    }\n  });\n});\nmatchObserver.observe(document, { attributes: true, childList: true, subtree: true });\n\nfunction AdoptElBySelector(selector: string, watch: boolean = true, config: any) {\n  return (...props: any[]) => {\n    // on mutation\n    if (watch) selectorMap.set(selector, [props, config]);\n    // onload\n    const els = document.querySelectorAll(selector);\n    for (const el of els) HtmlTag(el as HTMLElement, props, config);\n  };\n}\n\nfunction AdoptElByInstance(el: HTMLElement, config: any) {\n  return (...props: any[]) => HtmlTag(el, props, config);\n}\n\nfunction CreateEl(tag: string, config: any) {\n  return (...props: any[]) => {\n    const ns = 'http://www.w3.org/1999/xhtml';\n    const el = document.createElementNS(ns, tag as string);\n    return HtmlTag(el, props, config);\n  };\n}\n\nfunction HtmlTag(el: HTMLElement, traits: any[] = [], config: any = {}) {\n  traits.forEach(([trait, ...args]) => config[trait](el, ...args));\n  function fn(...children: any[]) {\n    children.forEach((child) => el.append(child));\n    return el;\n  }\n  return fn;\n}\n\nexport function HTML<P extends Record<string, any>>(config?: P) {\n  return new Proxy(\n    {},\n    {\n      get: (_, prop) => {\n        if (prop === 'el') return (el: HTMLElement) => AdoptElByInstance(el, config);\n        if (prop === '$el') return (selector: string, watch: boolean) => AdoptElBySelector(selector, watch, config);\n        return CreateEl(prop as string, config);\n      },\n    },\n  ) as HtmlReturnType<P>;\n}\n", "import { HTML } from \"@linttrap/oem\";\n\nconst html = HTML({\n  style: (el: HTMLElement, prop: string, val: string, breakpoint: number, psuedo: string) => {\n    const apply = () => {\n      const isInBreakpoint = window.innerWidth > breakpoint;\n      if (!isInBreakpoint) return;\n      el.style[prop as any] = val as any;\n    };\n    window.addEventListener(\"resize\", apply);\n    if (psuedo) el.addEventListener(psuedo, apply);\n    apply();\n  },\n});\n\n// register component\nfunction register(element: HTMLElement) {\n  const styleTraits = element\n    .getAttributeNames()\n    .filter((attr) => attr !== \"dx-style\" && element.style.hasOwnProperty(attr))\n    .map((attr) => {\n      const values = element.getAttribute(attr)?.split(\" \");\n      return values?.map((val) => {\n        const [bpVal, bp] = val.split(\"@\");\n        const [_val, psuedo] = bpVal.split(\":\");\n        const _attr = attr.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n        return [\"style\", _attr, _val, Number(bp ?? \"0\"), psuedo];\n      });\n    })\n    .flat();\n  html.el(element)(...(styleTraits as any));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const buttons = document.querySelectorAll(`[dx-style]`) as NodeListOf<HTMLElement>;\n  buttons.forEach(register);\n  new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.addedNodes.length > 0 && mutation.type === \"childList\") {\n        mutation.addedNodes.forEach((node) => {\n          if (node instanceof Element && node.getAttribute(\"dx\")) register(node as HTMLElement);\n        });\n      }\n    });\n  }).observe(this, { attributes: false, childList: true, subtree: true });\n});\n"],
  "mappings": "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",
  "names": ["selectorMap", "matchObserver", "mutations", "mutation", "node", "selector", "props", "config", "els", "el", "HtmlTag", "AdoptElBySelector", "watch", "AdoptElByInstance", "CreateEl", "tag", "ns", "traits", "trait", "args", "fn", "children", "child", "HTML", "_", "prop", "html", "HTML", "el", "prop", "val", "breakpoint", "psuedo", "apply", "register", "element", "styleTraits", "attr", "bpVal", "bp", "_val", "_attr", "_", "letter", "mutations", "mutation", "node"]
}
