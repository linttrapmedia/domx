{
  "version": 3,
  "sources": ["../src/components/dx-frame.ts"],
  "sourcesContent": ["export class DomxFrame extends HTMLElement {\n  behaviorAttributeNames: string[] = [\"src\", \"allowfullscreen\", \"allow\"];\n  baseStyles: string = `:host { box-sizing: border-box; display: flex; }`;\n  psuedoStyles: Record<string, [string, string][]> = {};\n  styleSheet: CSSStyleSheet = new CSSStyleSheet();\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot!.innerHTML = \"<slot></slot>\";\n    this.render = this.render.bind(this);\n    this.renderCss = this.renderCss.bind(this);\n    this.shadowRoot!.adoptedStyleSheets = [this.styleSheet];\n  }\n  connectedCallback() {\n    this.render();\n  }\n  renderCss(attributes: string[] = []) {\n    let styles: [bp: string, prop: string, val: string, psuedo: string][] = [];\n    for (let i = 0; i < attributes.length; i++) {\n      const attributeName = attributes[i];\n      const [attr, psuedo] = attributeName.split(\":\");\n      const [prop, bp = \"0\"] = attr.split(\"--\");\n      const value = (this as any).getAttribute(attributeName);\n      styles.push([bp, prop, value, psuedo]);\n    }\n    const renderedStyles = styles\n      .sort((a, b) => (a[3] ? 1 : -1)) // sort by psuedo\n      .sort((a, b) => Number(a[0]) - Number(b[0])) // sort by breakpoint\n      .map(\n        ([bp, prop, val, psuedo]) =>\n          `@media (min-width: ${bp}px) { :host ${\n            psuedo ? `iframe:${psuedo}` : \"iframe\"\n          } { ${prop}:${val}; }}`\n      )\n      .join(\"\\n\");\n    return this.baseStyles + renderedStyles;\n  }\n  render() {\n    this.innerHTML = \"\";\n    const iframe = document.createElement(\"iframe\");\n    iframe.src = this.getAttribute(\"src\") as string;\n    iframe.width = \"100%\";\n    iframe.height = \"100%\";\n    iframe.frameBorder = \"0\";\n    iframe.allowFullscreen = this.hasAttribute(\"allowfullscreen\");\n    iframe.allow = this.getAttribute(\"allow\") || \"\";\n    this.shadowRoot!.appendChild(iframe);\n    const styleAttributes = this.getAttributeNames().filter(\n      (attr) => !this.behaviorAttributeNames.includes(attr)\n    );\n    this.styleSheet.replace(this.renderCss(styleAttributes));\n  }\n}\n\ncustomElements.define(\"dx-frame\", DomxFrame);\n"],
  "mappings": "mBAAO,IAAMA,EAAN,cAAwB,WAAY,CAKzC,aAAc,CACZ,MAAM,EALR,4BAAmC,CAAC,MAAO,kBAAmB,OAAO,EACrE,gBAAqB,mDACrB,kBAAmD,CAAC,EACpD,gBAA4B,IAAI,cAG9B,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EAClC,KAAK,WAAY,UAAY,gBAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,WAAY,mBAAqB,CAAC,KAAK,UAAU,CACxD,CACA,mBAAoB,CAClB,KAAK,OAAO,CACd,CACA,UAAUC,EAAuB,CAAC,EAAG,CACnC,IAAIC,EAAoE,CAAC,EACzE,QAASC,EAAI,EAAGA,EAAIF,EAAW,OAAQE,IAAK,CAC1C,IAAMC,EAAgBH,EAAWE,GAC3B,CAACE,EAAMC,CAAM,EAAIF,EAAc,MAAM,GAAG,EACxC,CAACG,EAAMC,EAAK,GAAG,EAAIH,EAAK,MAAM,IAAI,EAClCI,EAAS,KAAa,aAAaL,CAAa,EACtDF,EAAO,KAAK,CAACM,EAAID,EAAME,EAAOH,CAAM,CAAC,CACvC,CACA,IAAMI,EAAiBR,EACpB,KAAK,CAACS,EAAGC,IAAOD,EAAE,GAAK,EAAI,EAAG,EAC9B,KAAK,CAACA,EAAGC,IAAM,OAAOD,EAAE,EAAE,EAAI,OAAOC,EAAE,EAAE,CAAC,EAC1C,IACC,CAAC,CAACJ,EAAID,EAAMM,EAAKP,CAAM,IACrB,sBAAsBE,gBACpBF,EAAS,UAAUA,IAAW,cAC1BC,KAAQM,OAClB,EACC,KAAK;AAAA,CAAI,EACZ,OAAO,KAAK,WAAaH,CAC3B,CACA,QAAS,CACP,KAAK,UAAY,GACjB,IAAMI,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,IAAM,KAAK,aAAa,KAAK,EACpCA,EAAO,MAAQ,OACfA,EAAO,OAAS,OAChBA,EAAO,YAAc,IACrBA,EAAO,gBAAkB,KAAK,aAAa,iBAAiB,EAC5DA,EAAO,MAAQ,KAAK,aAAa,OAAO,GAAK,GAC7C,KAAK,WAAY,YAAYA,CAAM,EACnC,IAAMC,EAAkB,KAAK,kBAAkB,EAAE,OAC9CV,GAAS,CAAC,KAAK,uBAAuB,SAASA,CAAI,CACtD,EACA,KAAK,WAAW,QAAQ,KAAK,UAAUU,CAAe,CAAC,CACzD,CACF,EAEA,eAAe,OAAO,WAAYf,CAAS",
  "names": ["DomxFrame", "attributes", "styles", "i", "attributeName", "attr", "psuedo", "prop", "bp", "value", "renderedStyles", "a", "b", "val", "iframe", "styleAttributes"]
}
