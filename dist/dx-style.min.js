"use strict";(()=>{var d=class extends HTMLElement{constructor(){super();this.baseStyles=[["display","inherit"]];this.slottedStyles=[];this.psuedoStyles={};this.styleSheet=new CSSStyleSheet;this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="<slot></slot>",this.render=this.render.bind(this),this.shadowRoot.adoptedStyleSheets=[this.styleSheet],new MutationObserver(s=>{s.forEach(r=>{r.type==="attributes"&&this.render()})}).observe(this,{attributes:!0})}connectedCallback(){this.render(),window.addEventListener("resize",this.render)}disconnectedCallback(){window.removeEventListener("resize",this.render)}render(){let o=this.slottedStyles,s={};this.getAttributeNames().forEach(t=>{let[e,l]=t.split("--"),[n,i]=e.split(":"),S=Number(l??0);if(window.innerWidth<S)return;let h=this.getAttribute(t);i?(s[i]||(s[i]=[]),s[i].push([n,h])):o.push([n,h])});let r=`:host{ ${this.baseStyles.map(([t,e])=>`${t}:${e};`).join("")}}`,a=`::slotted(*){ ${o.map(([t,e])=>`${t}:${e} !important;`).join("")}}`,c=Object.entries(s).map(([t,e])=>{let l=e.map(([n,i])=>`${n}:${i} !important;`).join("");return`::slotted(*:${t}) { ${l} }`}).join("");this.styleSheet.replace(r+a+c)}};customElements.define("dx-style",d);})();
//# sourceMappingURL=dx-style.min.js.map
