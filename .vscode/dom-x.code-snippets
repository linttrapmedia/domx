{
    "HTML Script Tag": {
        "prefix": "html-script-tag",
        "body": [
            "<script src=\"$1\"></script>"
        ],
        "description": "Insert a script tag"
    },
    "Web Component Class": {
        "prefix": "webcomponent",
        "body": [
            "class ${1:ComponentName} extends HTMLElement {",
            "  constructor() {",
            "    super();",
            "    this.attachShadow({ mode: 'open' });",
            "",
            "    // styles",
            "    const style = this.renderCSS(`",
            "        .wrapper {",
            "            $2",
            "        }",
            "    `);",
            "",
            "    // html",
            "    const html = this.renderHTML(`",
            "        <div class='wrapper'>",
            "            $3",
            "        </div>",
            "    `);",
            "",
            "    // append",
            "    (this as any).shadowRoot.append(style, html);",
            "  }",
            "",
            "  renderHTML(htmlObj) {",
            "    const template = document.createElement('template');",
            "    template.innerHTML = htmlObj.trim();",
            "    return template.content.cloneNode(true);",
            "  }",
            "",
            "  renderCSS(cssObj) {",
            "    const style = document.createElement('style');",
            "    style.textContent = cssObj.trim();",
            "    return style;",
            "  }",
            "",
            "  connectedCallback() {",
            "    // element attached to the DOM",
            "  }",
            "",
            "  disconnectedCallback() {",
            "    // element removed from the DOM",
            "  }",
            "",
            "  attributeChangedCallback(name, oldValue, newValue) {",
            "    // attribute value changed",
            "  }",
            "",
            "  static get observedAttributes() {",
            "    return [];",
            "  }",
            "}",
            "",
            "customElements.define('${4:custom-tag-name}', ${1:ComponentName});"
        ],
        "description": "Create a basic web component class"
    }
}
